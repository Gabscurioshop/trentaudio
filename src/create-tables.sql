CREATE TABLE AUDIO_FILE (AUDIO_FILE_ID char(50),DATE_PUBLISHED timestamp,PUBLISHER text,A_LANGUAGE char(20),DATE_INTERVIEWED  date,TITLE text,DESCRIPTION text,FILE text,  /* link to audio*/PRIMARY KEY (AUDIO_FILE_ID));
CREATE TABLE INTERVIEWER(INTERVIEWER_ID SERIAL UNIQUE,GENDER char(2),AGE int,NAME varchar(40),PRIMARY KEY (INTERVIEWER_ID));
CREATE TABLE INTERVIEWEE(INTERVIEWEE_ID SERIAL UNIQUE, GENDER char(2),AGE int,NAME varchar(40),CITY varchar(20),STATE char(2),PRIMARY KEY (INTERVIEWEE_ID));
CREATE TABLE USR (USR_EMAIL char(50),USR_USERNAME varchar(40),USR_PASSWORD varchar(20),IS_BLOCKED char(1),  /*Y for yes, N for no*/PRIMARY KEY(USR_EMAIL));
CREATE TABLE ADMIN (A_EMAIL char(50),A_USERNAME varchar(40),A_PASSWORD varchar(20),PRIMARY KEY(A_EMAIL));
CREATE TABLE REPORT(REPORT_NUM SERIAL UNIQUE,TYPE varchar(20), /*Audio or Transcript*/USR_EMAIL char(50),A_EMAIL char(50),DECISION char(20), /*Approved, Pending, or Disapproved*/PRIMARY KEY (REPORT_NUM),FOREIGN KEY (USR_EMAIL) REFERENCES USR(USR_EMAIL),FOREIGN KEY(A_EMAIL) REFERENCES ADMIN(A_EMAIL));
CREATE TABLE TRANSCRIPT (AUDIO_FILE_ID char(50), TRANSCRIBER varchar(40),T_LANGUAGE char(20),FILE text, /* link to transcript*/PRIMARY KEY (AUDIO_FILE_ID),FOREIGN KEY (AUDIO_FILE_ID) REFERENCES AUDIO_FILE(AUDIO_FILE_ID));
CREATE TABLE BLOCK(USR_EMAIL char(50),A_EMAIL char(50),PRIMARY KEY(USR_EMAIL, A_EMAIL),FOREIGN KEY (USR_EMAIL) REFERENCES USR(USR_EMAIL),FOREIGN KEY(A_EMAIL) REFERENCES ADMIN(A_EMAIL));
CREATE TABLE INTERVIEWED_BY (AUDIO_FILE_ID char(50),INTERVIEWER_ID SERIAL UNIQUE,PRIMARY KEY(AUDIO_FILE_ID,INTERVIEWER_ID),FOREIGN KEY (AUDIO_FILE_ID) REFERENCES AUDIO_FILE(AUDIO_FILE_ID),FOREIGN KEY(INTERVIEWER_ID) REFERENCES INTERVIEWER(INTERVIEWER_ID));
CREATE TABLE INTERVIEW_OF (AUDIO_FILE_ID char(50),INTERVIEWEE_ID SERIAL UNIQUE,PRIMARY KEY(AUDIO_FILE_ID,INTERVIEWEE_ID),FOREIGN KEY (AUDIO_FILE_ID) REFERENCES AUDIO_FILE(AUDIO_FILE_ID),FOREIGN KEY(INTERVIEWEE_ID) REFERENCES INTERVIEWEE(INTERVIEWEE_ID));
CREATE TABLE KEYWORDS(AUDIO_FILE_ID char(50),KEYWORD text, /*list of keywords*/PRIMARY KEY (AUDIO_FILE_ID, KEYWORD),FOREIGN KEY (AUDIO_FILE_ID) REFERENCES AUDIO_FILE(AUDIO_FILE_ID));
CREATE TABLE INTERVIEWER_RACES(INTERVIEWER_ID SERIAL UNIQUE, RACE text, /*list of interviewer’s races*/PRIMARY KEY (INTERVIEWER_ID,RACE),FOREIGN KEY (INTERVIEWER_ID )REFERENCES INTERVIEWER(INTERVIEWER_ID));
CREATE TABLE INTERVIEWEE_RACES(INTERVIEWEE_ID SERIAL UNIQUE, RACE text, /*list of interviewee’s races*/PRIMARY KEY (INTERVIEWEE_ID,RACE),FOREIGN KEY (INTERVIEWEE_ID) REFERENCES INTERVIEWEE(INTERVIEWEE_ID));
CREATE TABLE TRANSCRIPT_ERROR(REPORT_NUM SERIAL UNIQUE,ERROR_DESCRIPTION text,PRIMARY KEY (REPORT_NUM),FOREIGN KEY (REPORT_NUM) REFERENCES REPORT(REPORT_NUM));
CREATE TABLE METADATA_EDIT_REQUEST(REPORT_NUM SERIAL UNIQUE,EDIT_METADATA_DESCRIPTION text,METADATA_NAME varchar(40),PRIMARY KEY (REPORT_NUM),FOREIGN KEY (REPORT_NUM) REFERENCES REPORT(REPORT_NUM));
